name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          external-id: ${{ secrets.AWS_EXTERNAL_ID }}
          role-duration-seconds: 1200  # Optional, adjust as needed

      - name: Log in to Amazon ECR
        id: login-ecr
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY_URL }}

      - name: Build, tag, and push Docker image
        env:
          ECR_REPOSITORY: your-ecr-repository
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ secrets.AWS_ECR_REGISTRY_URL }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ secrets.AWS_ECR_REGISTRY_URL }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task@v2
        with:
          cluster: hello-world-cluster
          service: hello-world-service
          task-definition: hello-world-taskdefination
          container-image-name: ${{ secrets.AWS_ECR_REGISTRY_URL }}/$ECR_REPOSITORY:$IMAGE_TAG
          wait-for-service-stability: true
